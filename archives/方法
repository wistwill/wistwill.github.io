---
title: Java基础--方法
date: 2019-08-5
categories: Java
tags:
- Java
- 方法

copyright: true
---

## 概念

## 作用

## 方法的两种类型及定义格式

### 有返回值类型

```java
有返回值类型定义格式：
		修饰符 返回值数据类型 方法名 (参数数据类型 参数1，参数数据类型 参数2){
				方法体; //完成某个功能
	 			return 返回值;	//结束方法，并返回返回值到调用位置
	 	}
定义方法的两个明确：
		1.返回值类型
	  	2.看参数列表(参数类型和参数的个数)
	  	参数：数据值（常量，变量）
	  		参数作用：为方法体传输需要的数据，可以有参数，也可以没有；

调用方式：单独调用，输出调用，赋值调用（推荐使用）
使用场景：一般规定有具体返回值，需要对返回值进行操作时。
示例：
//定义一个求和函数sum
public static int sum(int x, int y) {
		int z = x + y;
		return z;
	}

```



### 无返回值类型

```java
无返回值类型定义格式：
		修饰符 void 方法名 (参数数据类型 参数1，参数数据类型 参数2){
				方法体;
	 	}
定义方法的两个明确：
		1.返回值类型:void
	  	2.看参数列表(参数类型和参数的个数)
	  	参数：数据值（常量，变量）
	  		参数作用：为方法体传输需要的数据，可以有参数，也可以没有；

调用方式：单独调用
使用场景：一般没有规定具体返回值，需要进行打印等操作时。
示例：
//定义一个打印HellWorld的方法
public static void PrintHelloWorld(int x) {
	for（int i =0;i<x;i++）{
		System.out.println("HelloWorld");
	}
}

```



## 方法的调用方式

### 如何调用（格式）？

方法名（参数1，参数2...）

`注意：要看方法名和参数（参数类型和个数）`

### 3种调用类型

单独调用；赋值调用；输出调用

```java
package com.will.work;

public class Method_Demo {
	public static void main(String[] args) {
		int a,b;
		a=20;
		b=30;
		//单独调用
		sum(a,b);
		//赋值调用
		int c = sum(a,b);
		System.out.println("两数的和为："+c);
		//输出调用
		System.out.println("输出调用：");
		System.out.println("两数的和为："+sum(a,b));
	}
	//定义Sum方法
	public static int sum(int x, int y) {

		int z = x + y;
		return z;
	}

}

```

## 案例：

### 判断三个数的大小

```java
package com.will.work;

import java.util.Scanner;

public class MixOrMin {
	/*
	 * 判断三个数的大小并打印最大值最小值
	 */
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int x, y, z, max, min;
		System.out.println("请输入3个数:");
		x = sc.nextInt();
		y = sc.nextInt();
		z = sc.nextInt();
		max = Max(x, y, z);	//使用赋值调用
		min = Min(x, y, z);
		System.out.println("Max:" + max);
		System.out.println("Min:" + min);
	}
	//求最大
	public static int Max(int a, int b, int c) {
		int x = (a < b ? (b < c ? c : b) : (a < c ? c : a));
		return x;
	}
	//求最小
	public static int Min(int a, int b, int c) {
		int x = (a > b ? (b < c ? b : c) : (a < c ? a : c));
		return x;
	}
}

```

### 打印水仙花数

```java
package com.will.work;

public class Method_PrintFlower {
	/*
	 * 使用方法打印水仙花数，并统计个数
	 */
	public static void main(String[] args) {
		PrintFlower();	//无返回类型方法只能使用单独调用
	}

	public static void PrintFlower() {
		int count = 0;
		for (int i = 100; i < 1000; i++) {
			int ge = i % 10;
			int shi = i / 10 % 10;
			int bai = i / 10 / 10 % 10;
			if (Math.pow(ge, 3) + Math.pow(shi, 3) + Math.pow(bai, 3) == i) {
				System.out.println(i);
				count++;
			}
		}
		System.out.println("水仙花的个数为：" + count);
	}
}

```

### 打印0-n的数

```java
package com.will.work;

import java.util.Scanner;

public class Method_PrintNum {
	/*
	 * 打印0-n的数：
	 */
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("请输入一个大于等于0的数：");
		int n = sc.nextInt();
		PrintNum(n);
	}

	public static void PrintNum(int n) {
		for (int i = 1; i <= n; i++) {
			System.out.println(i);
		}
	}

}

```

